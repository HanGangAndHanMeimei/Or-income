01 第一天内容回顾
    001 HTML5 = HTML语法(骨架) + CSS(皮肤) + JS(动作)
    002 HTML的常用标签
        表单标签|标题标签|div标签|超链接|图片资源|换行|分割线等
    003 HTML5中新增的特性（后面补充）
    004 CSS的样式
        "行内样式|页内样式|外部样式"
    005 CSS的选择器
        "标签选择器|类名选择器|id选择器···
    006 CSS的常用属性
        "设置背景颜色|设置文字大小|设置是否显示|设置是否可见等"
        属性的继承和不可继承

02 CSS的其他属性
    先略过

03 盒子模型
   说明：每个标签都是一个盒子，可以通过浏览器中的开发者工具查看当前标签的盒子模型
   样式
    /*
     _________________________
     | _____________________  |
     | |                    | |
     | | |----------------| | |
     | | |     content    | | |
     | | |----------------| | |
     | |_______border_______| |
     |_________margin_________|
     */
   内容：
        ① "内容-content"（文字和图片）      宽度和高度
        ② "填充-padding"（内边距）         上-右-下-左 需要区分参数个数的不同情况
        ③ "边框-border"（盒子本身）         宽度-样式-颜色
        ④ "边界-margin"（外边距）          上-右-下-左
/*
    类型：
        ① 标准盒子模型：W3C出品                     '盒子的宽度与高度==内容的宽度与高度'
        ② IE盒子模型：基于IE浏览器的核心做开发的浏览器  '盒子的宽度与高度==边框的宽度与高度，只除去了外边距'
          "解决：针对IE体系和非IE体系来做两套适配。
    代码演示：
        新建HTML文件命名为"02-CSS盒子模型"
        演练：
            01 添加一个div标签，设置内容为盒子模型。
            02 为div设置页内样式，设置宽度400px高度为200px,背景颜色为红色。
            03 使用浏览器运行页面，发现'盒子模型'的内容紧紧的粘住div的左上角。
            04 使用通配符设置当前页面的所有标签的外边距和内边距都==0。
            05 设置盒子的属性
                ① 设置边框      border = 5px
                ② 设置内边距    padding:10px 15px 20px 25px(上右下左)
                ③ 设置外边距    margin:10px 15px
                ④ 设置宽度为30%，设置最大宽度即max-width为400px,使用浏览器运行并观察。

04 CSS3的重要特性
    重要特性：
        ① RGBA透明度 在红绿蓝三色的基础上增加了alpha通道用来设置透明度
        ② 块阴影(box-shadow)
        ③ 文字阴影(text-shadow)
        ④ 圆角(border-radius)
        ⑤ 边框图片和形变(后面讲解)


    代码演示：
        新建HTML文件命名为"03-CSS3的重要特性"
        演练：
            01 添加5个div标签，设置内容分别为1-2-3-4-5
            02 设置所有div的背景颜色，设置宽度和高度分别为200px和100px
            03 设置div的外边距全部为20px "注意：如果相邻的标签都设置了外边距，那么取最大值而非做加法计算"
            04 注释外边距相关的代码，设置每个div的rgba(255,0,0,1.0)实现颜色渐变效果
            ——————————
            05 通过伪类实现当鼠标放在div上面的时候，出现块阴影和文字阴影。
            06 设置块阴影 box-shadow:10px 20px 表示水平向右方向有10px的阴影，垂直向下方向有20px的阴影。
            07 设置阴影的颜色，设置模糊，设置内部阴影等
            ——————————
            08 在HTML文档中添加p段落标签，设置文字阴影和颜色。text-shadow:3px 3px 10px(模糊) red
            09 尝试实现seemygo的火焰效果。"注意:不能给文字设置内部阴影"
            ——————————
            10 为div标签设置圆角为20px border-radius：px
            11 设置左上角的圆角效果，右下角的圆角效果


05 CSS布局（脱离标准流-定位）
    说明：默认情况下，所有的网页标签都是在"标准流"的布局中。
    分类：
        "标准流布局"：从上往下，从左往右
        "非标准流布局"：脱离了标准流的布局 float属性（浮动） + position和left属性等
    非标准流布局相关属性：
        float属性：
            left:脱离标准流，浮动在父标签的最左边
            right:脱离标准流，浮动在父标签的最右边

        position属性:
            〇 咒语："子绝父相" + "网页内的所有标签一旦脱离了标准流，那么类型就会被强制转换为行内-块级标签"
            ① 作用：设置绝对定位和相对定位
            ② 说明：每个盒子中都有一个position属性，默认值为static
            ③ 定位：
                A 相对于父盒子来定位
                B 相对于浏览器来定位


    '代码演示A
        新建文件夹命名为"02-脱离标准流"- 新建HTML文件命名为"01-float属性"
    演练：
        01 在HTML文档中添加左边和右边的div块，把他们放在大的div中，设置大div的背景颜色为红色，宽度和高度分别为500和400px
        02 分别设置左边和右边div的背景颜色为黄色与绿色，设置宽度和高度为50px
        03 在页面添加一个正常的div标签，可以发现脱离了标准流的标签如左右两个标签同样占用父标签的空间。
        04 演示float的常见应用场景：列表的一行展示|左边浮动|右边浮动

    '代码演示B
        新建HTML文件命名为"02-position属性"
    演练：
        ——————————————————相对父盒子来定位演示 "position = relative|absolute"
        01 添加一个div，设置背景颜色，宽度和高度(500)px。
        02 在div中添加一个子控件(div)，设置背景颜色，设置宽度和高度为100px,设置圆角为50px，让标签成为一个圆。
        03 修改父盒子position属性的值为 relative；修改子盒子position属性的值为 absolute。
        04 结合上下左右来进行定位，设置子盒子的left和top分别为30px和30px。
        05 修改实现 设置让子盒子停留在父标签的右下角。
        06 添加新的自盒子，验证层级结构（不会相互影响）。
        07 设置让⭕️居中显示，left：50% right:50% 设置平移 transform:translate(-50%,-50%)'
        08 思考：为什么父盒子一定要设置position属性为relative？
        09 答案：如果父盒子的position属性不设置那么默认为static,子盒子在定位的时候会一直往上层盒子中检索，检索position不是static的父级盒子来做定位参考，如果都没有那么就参照最外层的body来定位。
        ——————————————————相对浏览器来定位演示    "position = fixed"
        10 添加一个和div(父盒子)同级的div,设置该标签的背景颜色和内容。
        11 设置该标签的position属性为fixed,设置bottom=0left=0设置高度为100px设置宽度为100%



06 CSS布局（水平居中和垂直居中）
    代码演示：
        新建文件夹(命名为居中)-新建HTML文件(命名为index)
    思路：有很多的标签可以来设置居中，通过在行内标签|块级标签|行内-块级标签中找出相应的代表来演练
    总结：
        "水平居中":
            '行内标签和行内-块级标签'  ==> 直接在父标签中设置"text-align属性值为center"
            '块级标签 '              ==> 设置自身的"margin == 0 auto"
        "垂直居中"
            '行内标签和行内-块级标签'  ==>直接在父标签中设置行高属性等于行高即可 "line-height = height"
        "图片居中（先略过）"
    演练：
        01 先创建div外部标签，设置背景颜色|宽度|高度
        ——————————————————水平居中
        02 创建行内标签(代表为span),在父标签div中设置text-align属性控制让所有的子标签都居中。
        03 创建行内-块级标签(代表为button),同上。
        04 创建块级标签(代表为div),同上设置，结果是div中的内容居中，但是div本身并没有居中显示。
           1"设置margin-left "
           2"设置margin-left和margin-right均为auto "
           3"margin 0 auto"  推荐
        ——————————————————垂直居中
        05 先演示行内标签和行内-块级标签，设置line-height属性
        06 演示块级标签(div)设置设置line-height属性，结果div中的内容居中，但是div的高度被拉伸为父标签的高度。
            1 在子标签中(div)重写"line-height属性=子标签的高度"
            2 在父标签中设置position为relative,在子标签中设置position为absolute
            3 在子标签中设置top和left均为50%
            4 在子标签中设置平移即 transform为translate(-50%,-50%)

07 内容的宽度和高度从哪里计算？
    演练：
        新建HTML文件(命名为01-内容的宽度和高度从何计算)

    内容：
        01 新建div标签，设置该标签的背景颜色|宽度|高度。
        02 通过设置通配符，控制外边距和内边距全部都为0。
        03 设置div的边框为 border:10px solid orange
        04 设置div的内边距 padding:20px
        05 设置盒子的模式  box-sizing:border-box(从边框开始计算)


08 百度页面搭建
    代码演练
        新建文件夹(命名为百度首页)-新建HTML文件(命名为01-百度首页)
    演练：
        01 首先分析百度网页的页面结构，简单观察可以分解为上-中-下结构。
        02 创建站点信息（css|imgs文件夹|css文件|HTML文件等），设置标题，连接外部的样式(link Tab)。
        03 切割body为头部-主要内容-尾部分别对应上中下的结构，并绑定各自的id。
        04 先完成HTML页面的搭建
        05 设置页面的CSS样式，先清理不必要的内容(外边距和内边距全部设置为0)，统一设置页面的字体(body)
        06 设置页面头部的CSS样式
            ① 设置外边距为15px
            ② 设置右边对齐
            ③ 拿到页面所有的a标签设置文字的颜色为黑色
            ④ 拿到头部连接中所有a标签设置margin-right为8px
            ⑤ 设置文字的样式加粗等（最右边两个正常）
            ⑥ 设置更多按钮标签的背景颜色(截色)，设置颜色为白色并去掉下划线(text-decoration)
            ⑦ 设置更多产品标签的内间距为5px

        07 设置页面中间的CSS样式
            ① 设置图片
                "设置图片的宽度(270)和高度(130)
                "设置让图片居中
            ② 设置输入框
                "设置宽度和高度"
                "设置输入框的盒子模式"
                "设置输入款的边框为1px solid #dddddd等"
                "使用伪类去除外边线"
            ③ 设置百度一下标签
                "改变标签的类型 display:inline-block 把该标签由行内标签改变成行内-块级标签"
                "改变文字的颜色为白色 color:white"
                "去除文字的下划线 text-decoration:nore"
                "修改文字大小"
                "设置让文字水平居中和垂直居中"
            ④ 其他
                "设置输入框和百度一下标签的外边距
                "文本框中输入的内容顶格，设置内边距实现
                "文本输入框获得焦点的时候设置边框的颜色"
            ⑤ 设置图片快速导航
                "设置所有图片的宽度和高度假设为120px"
                "设置图片div的宽度为50%"
                "设置让所有的图片都居中margin:0 auto，让里面的内容也居中 text-align:center"
                "设置图片之间的间距为8px"
                "通过伪类设置当鼠标移动到图片上时，加阴影效果 box-shadow 2px 2px #e8e8e8"
                "通过伪类设置蒙版-不透明度 opacity = 0.5"

        08 设置页面底部的CSS样式
            ① 设置定位 相对于浏览器定位，左边和底边分别为0和40px "position=fixed left=0 bottom=20"
            ② 设置宽度为100%
            ③ 通过父标签设置让文字内容居中，设置内边距为15px
            ④ 拿到底部视图中所有的a标签，设置其右边外边距 margin-right为5px

        09 设置页面的背景
            "CSS中找到body把页面的背景图片设置上去 background:url("../imgs/背景图")"
            "设置让背景图片跟随页面缩放而缩放 background-size:cover"
            "处理头部的透明背景|高度|外边距|垂直居中等"

*/

09 登录界面搭建
    001 准备阶段
        ① 分析登录界面的结构和使用情况(可拿走重用+头部标题+中部输入款+底部第三方)
        ② 创建文件夹imgs|css等，创建HTML文件命名为index,创建CSS文件命名为index.css,导入图片素材资源
        ③ 修改标题为登录首页，把外部的CSS样式表连接进来
        ④ 按照上中下的结构先对页面的整体进行划分，划分为面板(上部-中部-下部)
    002 搭建登录界面阶段
        ① 搭建结构  先使用div来包住整个结构，然后在该div内部再添置三个div分别用来处理上中下三个部分(panel-top-middle-bottom)。
        ② 顶部处理
            /*
           1) 使用H1标签来包住"欢迎登陆教育系统"
             */
        ③ 中部处理
            /*
           1)先使用div处理用户名(class=username)，内部包含img和input(type=text)标签
           2)再使用div处理密码(class=pwd)，内部包含img和input标签，注意设置暗文显示(type=password)
           3)创建div处理自动登录和忘记密码标签，span处理自动登录和复选框|a处理忘记密码
           4)创建button标签，处理登录按钮，绑定id
            */
        ④ 底部处理
            /*
           1)span处理社交账号文字，3个img标签处理要显示的图片
             */
    003 调整布局阶段
        ① 使用通配符设置外边距和内边距，但是会有问题(可以参考淘宝和京东的做法)
        ② 设置背景 拿到body,设置背景(background-图片，no-repeat不重复，background-size为cover平铺)
        ③ 设置面板
            /*
            01 拿到面板设置面板的背景颜色为白色，改变标签的类型为"行内-块级标签"(让面板的尺寸依赖于内容)
            02 控制居中 先让body中的text-align居中，然后在面板中重写设置该属性为left以实现"面板居中但面板中的内容不居中"
            03 设置上边距margin-top为150px
            04 设置内边距padding 15px
            05 设置圆角 border-radius 5px
            06 设置阴影 box-shadow:0 0 10px white
             */
        ④ 设置面板头部
            /*
            01 设置让内容居中 text-align：center
            02 设置外边距 margin 10px 0
            03 设置字体的颜色 color:橘色
            04 设置线条 boder-bottom 1px solild #dddddd
            05 设置底部的内间距为15 padding-bottom 0 10px 15px 表示上边为0，左右两边的距离为10，底部的距离为15
            */
        ⑤ 设置面板中部
            /*
            01 设置中间部分用户名和密码的背景颜色，方便查看
            02 设置底部的外边距为margin-bottom = 15px 设置高度为38px
            03 设置定位，让图片距离左边和上面的距离分别为8px和5px
            04 设置输入款的宽度和高度分别为100%，设置box-sizing为border-box
            05 设置左边的内边距为38 即padding-left = 38px
            06 设置输入框的圆角 border-radius 5px，去除设置背景颜色的代码
            07 设置把输入框的点击蓝色线条去除，拿到输入框设置focus伪类，设置outline为none 
            08 设置输入框的块阴影 box-shodow 0 0 10px 橘色 设置边框的颜色为橘色 border-color
            09 设置自动登录和忘记密码 先统一设置字体大小为13px,修改颜色的灰度，让忘记密码标签右浮(float),设置外边距-底部为15px
            10 设置按钮
                 "设置宽度为100% 高度为38px
                 "背景颜色为橘色,文字颜色为白色
                 "文字大小为16px
                 "设置按钮的圆角为6px
                 "外边距-底部为15px
                 "设置边框为0，去除掉阴影效果
                 "设置当获得焦点的时候（focus）outline为none
             11 设置立即注册
                 "设置文字大小为13px
                 "外边距-底部为15px
                 "设置内容居中
                 "设置a标签文字颜色为橘色
                 "设置a标签，去除超链接的下划线 text-decoation:none
            */
        ⑥ 设置面板底部
            /*
            01 设置高度为60px 设置line-height为60px(垂直居中，发现无效)
            02 设置图片的宽度为40px 高度的值自动获得
            03 设置让图片垂直居中  vercital-algin：center 
            */

    004 补充适配移动端
        /*
        适配代码： <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
        思路：公司中一般要求一站式的开发，即开发一套系统之后能够适配所有的设备(浏览器|手机|平板)
        流程：先处理浏览器版本
         */

10 宠物大动员网页
    01 准备阶段
        ① 创建新的文件夹(宠物大动员)，创建css文件夹|imgs文件夹，创建index名称的HTML页面，导入图片|字体(ttf)资源
        ② 分析页面结构，对页面的结构进行切分，切分为四个模块(top-nav-list-bottom)
        ③ 处理页面的外边距和内边距 分别设置为0
        ④ 设置整个页面的背景（截取一小张图片后，使用该图片进行平铺）

    02 设置头部(线条)
        设置背景颜色为红色，设置高度为3px
    03 设置导航
        ① 先在div中添加标签 ul>li>a *5 分别设置对应的内容
        ② 拿到nav,设置让内容居中 text-align:center
        ③ 改变所有ul以及所有ul下面li标签的标签类型为行内-块级标签 display:inline-block
        ④ 拿到所有的a标签 设置导航的具体内容
            /*
            "设置宽度为250px 高度为44px
            "设置背景颜色
            "概念标签的类型 ，让行内标签->行内-块级标签 display:inline-block
            "设置文字的大小 text-font 29px
            "设置内容垂直居中 line-height 44px
            "设置外边距 margin 0 8px 让a标签左右之间的间距为8px
            "设置标签的默认选中，第一个标签以及当鼠标放到某个标签上之时设置背景颜色为白色，文字颜色为黑色
            "设置外边距-底部 100px
            '引入外部的字体：@font-face{设置字体|设置字体资源}，在body中通过font-family设置选择的字体
            */
    04 设置中间的部分
        ① 在div中放置img|p|button标签(可以使用input),设置宠物列表的背景颜色为白色
        ② 改变标签的类型，display = inline-block ，强制设置div的宽度为图片的宽度(320px)
        ③ 设置p标签
            /*
            "设置字体的为宋体 font-family
            "设置首行缩进 text-indent 20px
            "设置外边距 margin 10px 0
            */
        ④ 设置按钮
            /*
            "设置背景颜色为橘色
            "设置去除边框 border = 0
            "设置内边距  padding = 7px
            "设置宽度  width=130 高度height = 40px
            "设置圆角 border-radius=5px
            "设置字体的颜色为白色 white
            "设置字体的大小为22px
            "设置字体为外部引入的字体
             */
        ⑤ 处理多行内容
            /*
            01 处理多行内容 "把之前的单个宠物div拷贝多份
            02 处理内容居中 "在中间部分(list)部分，设置test-aligin为center居中，但是单个宠物div内部需要重写为left
            03 处理背景颜色 "背景颜色不应该设置在单个的div宠物上面，而应该设置在整个中间部分
            04 处理外边距  "对每个div宠物标签设置其外边距，margin为20px
             */

    05 设置底部内容
        ① 提供标题和列表 列表中放img标签用来展示图标,设置padding-bottom为30px
        ② 改变标签的类型(url以及url标签下面的li标签)，让图片横向排列
        ③ 处理文字标题
            /*
            "设置文字颜色为白色"
            "设置外边距margin 5px 0"
             */

    06 移动端的适配
        ① 添加移动端兼容视图相关的代码 inputView...
        ② 响应式布局 @media screen
           监听设备的最大宽度，(说明：大多数的适配以宽度为主)，当满足设定条件的时候修改属性值
           当选择使用手机模拟器展示的时候布局错乱，需要监听最大宽度+设置的宽度，做两套适配
        ③ 推荐使用第三方框架来实现响应式布局

    07 Bootstrap框架
        ① 资源 github网站上面搜索 + bootstrap官网
        ② bootstrap框架代码演示
           准备：先在github上面把框架下载到本地并拷贝dict部分，新建文件夹(Bootstrap框架初体验)-新建HTML文件(index)
           演练：
            001 先在HTML文件中连接CSS样式表
            002 对照着Bootstrap的中文文档来进行合理演示|字（图标）















