01 介绍课程内容
    HTML5课时：4.5天
    主要内容："HTML语法 + CSS结构 + JS + jQuery

02 HTMl5简单介绍
    ① W3C组织花费了8年的时间于2014年制定了HTML5的标准
    ② 移动先行，即在制定标准的时候优先考虑移动端的实现
    ③ 使用和学习的必要性
        1)"跨平台" 能够运行在所有拥有浏览器的平台
        2）运行平台是："浏览器"，运行的成本低
        3）当前HTML5尚不能完全取代原生应用

    ④ 如何使用HTML5 =>自己实现所有的部分|使用现成的框架（Bootstrap等）
        1）站点入口=>index.html文件
    ⑤ 手机app的开发模式
        1）原生
            =>性能好，与系统无缝结合
            =>成本高(4)
        2）HTML5 "可以做的和原生一致，但是实现要求较高“
            =>快速开发,成本低
            =>很难实现和原生APP一样的效果
        3）HTML5+原生
        4) React Native
            =>使用HTML5的技术，调用原生的API
    ⑥ 学习HTML5的必要性
        1）大前端的开发趋势
        2）增加技术竞争力
    ⑦ 岗位的划分（前端和移动端的竞争）
        平面设计师（作图+切图+HTML+CSS）
        前端工程师（HTML+CSS+JS+模板技术） 嵌入=>全部React
        后台工程师（服务器开发+数据库开发）  数据库
        移动工程师（iOS/安卓）OC | Swift | java
    ⑧ 开发工具
        1）安卓    eclipse | MyEclipse |android studio
        2) iOS    XCode
        3）HTML5  eclipse | MyEclipse |DreamWaver(可视化编程)
                  DreamWaver+flash+Fireworks == 网页三剑客（adobe） 使用HTML5来取代flash
                  推荐编辑器：webStore(安装)

    ⑨ web开发时代
        web1.0  主流技术：HTML+CSS
        web2.0  主流技术：Ajax|js|Dom|异步数据访问
        web3.0  主流技术：HTML5+CSS
        HTML5:"Canvas实现游戏的组件,灯光秀等|HTML5音频和视频|Web存储（之前加载慢=>本地化=>SQlLite数据库）|Geolocation社交和定位|Workers多线程处理 "
        CSS3:设计动画 2D变形 新特性

03 HTML5简单使用
    ① 网页的组成 HTML(骨头) + CSS(皮肤) +JS(动作)
    ② HTML
        1)概念：超文本标记语言 其实就是文本，由浏览器负责解析为具体的网页内容
        2)组成：由N个标签（节点+元素+标记）组成
        3)语法：HTML的语法非常松散，目前最新的版本是5.0，即HTML5
        4)结构：根标签|头部标签|内容标签|设置标题|设置编码|div标签
        5)注释：command+/

"代码：HTML5中输出helloWorld"
    步骤：打开webStore->空项目选择路径->新建项目(New-Directory)->设置名称(01-输出helloworld)->新建HTML文件
    其他: 修改webStore的偏好设置，调整字体的大小
    运行：webStore默认自动识别已经安装的浏览器，点击即可
    标准结构:
/*
 <html> 根标签
    <head>  头部标签
        <title>设置标题(中文需要设置编码)</title>
        <meta charset="UTF-8">  设置页面的编码UTF-8|GB2312
    </head>

    <body>
        <div> 需要展示的内容 </div>
    </body>内容标签
 </html>
 */

04 HTML常见标签
        ① 超链接标签
            给文字或图片添加超链接 <a href="url" target="">点击跳转</a>
            选择以什么样的方式打开超链接 target(当前窗口|新窗口打开|回到顶部|在父窗口打开=>只适用于PC端)
        ② 换行标签
            换一行 <br> //跟在标签的后面
        ③ 容器标签
            div|span:div相当于是OC里面的View
            div是一个容器，所见即所得。可以嵌套，在div中可以包括其他标签。
            注意：只要是双标签就可以把它当成是一个容器，而单标签不行。
        ④ 列表
            ul 无序列表  ul>li*5 Tab键
            ol 有序列表  通过type来设置排序方式（1-A-a）
        ⑤ 快捷键 ！Tab
        ⑥ 标题标签 h家族
            1）<h1>我是H1标签</h1>
            2）h1*5 Tab键 快捷键
            3）h1的标签最大
            4）"hr换行标签
        ⑦ 表单标签
            1）<input>默认是输入框 自带的属性可以在文school查询
            2）占位文字 - placeholder
            3）值 - value
            4）类型 -type 默认是输入框|日期|色板|文件|按钮|复选框|单选框
        ⑧ 段落标签
            1)<p>&nbsp;&nbsp;&nbsp;&nbsp;段落内容</p> 空两格
        ⑨ 图像标签
            1）<img src="图片资源">
            2）相对路径(资源在当前项目中./ ../)和绝对路径(资源不在本地)
            3) width|height 设置图片的宽度和高度
                a.如果不设置则使用的是默认的宽度和高度 width="200" 如果只修改宽度那么高度会等比例缩放
                b.默认单位是像素，也可以使用百分比如width="50%"表示图片的大小为父标签大小的50%
            4)alt="占位文字"

"代码：HTML中常用标签"
    步骤：新建文件夹(HTML中常用标签)-新建HTML文件(index.html)
    内容：
    ① 解释默认生成的信息:文档声明|文档语言 快捷生成(!Tab)
    ② h标签 = "标题标签(h家族 1~6)" 快捷键 (h1*5 Tab) + "分割线条标签 hr"
    ③ 表单标签  = '<input>'
                "文本输入框(type="text")" + "设置属性(占位文字placeholder|默认值value)"
                "日期选择器(type="date")"
                "取色板(type="color")"
                "文件选择框(type="file")"
                "按钮(type="button" value="我是按钮")"
                "复选框(type="checkbox")" +  "单选框(type="radio")"

    ④ 段落标签 "<p>段落的内容</p>"  '段落缩进可以使用转义字符或者是css控制
    ⑤ 图像标签  "<img src="图片的相对路径|绝对路径(新建imgs文件夹)">" '设置图片的宽度|高度(px|%)|占位文字alt
    ⑥ 超链接标签 "<href="网址" target="网页的打开方式">"
    ⑦ 换行标签 "<br>
    ⑧ 容器|表格|列表(有|无序)





05 HTML5新增的标签
    说明：在之前版本的基础上新增加27个标签删除了16个标签，主要包括：结构性标签|级块性标签|行内语义标签|交互性标签
    ① 结构性标签
        article标签：文章主题内容
        header标签：标记头部区域内容
        footer标签：标记底部标签
        section标签：标记章节
        nav标签
        小案例：完成新闻文章的页面展示
    ② 块级性标签
        使用的并不是特别多，主要完成页面区域的划分。当前浏览器还不支持
    ③ 行内语义性标签
        meter:特定范围内的数值 可以做工资（硬盘使用情况等等）
        time:时间值（使用比较少，不支持）
        progress:进度条，使用较多 <progress value="20" max=100>
        video:视频元素，支持缓冲预载和多种格式的视频 <video src="" contols="controls">
        audio: 音频元素，支持静音等               <audio src="" contols="controls">
    ④ 交互性标签（暂时使用不到）



/*===================下午内容===================*/
06 上午内容重点
    1-）HTML的常用标签
        h1~h6 + p + br + div + 列表 + 容器 + img(像素|伸缩比) + input(文本框|日期|文件) + a
    2-）HTML5的常用标签
        主要是结构性标签和行内语义标签

07 CSS的样式
    概念：层叠样式表，是网页的皮肤
    格式：键值对应形式，即属性名：属性值 => 如color:red；设置颜色为红色
    属性:CSS中的属性有两种情形，一种是单值属性一种是复合属性（边框的像素|颜色|圆角）
    缩进：Tab|Shift+Tab
    用法：
        1-）行内样式（内联样式）
            控制单个标签的样式，直接在标签的style属性中书写 如<div style="color:red;"></div>
        2-）页内样式
            在body中只放内容和结构，把样式设置放在head头部标签中处理。
        3-) 外部样式
            在单独的CSS文件中写书，然后在网页中用link标签进行引用
            <link rel="stylesheet" href="要链接的资源">  rel表示的是关系
            为什么：网站 == N个网页 + 服务器 + 数据库 + 插件 + 各种类库 网站中很多页面使用的样式是一样的，所以出现了外部样式，类似于OC开发中的重用机制
/*
            <head>
                <style>
                    body{
                          具体的设置
                        }

                    div{
                        background-color:red;
                        }
                </style>
            </head>
*/

"代码：设置CSS中的常用样式

    准备：新建文件夹->新建HTML文件
    CSS-行内样式内容: "每个标签都有一个style属性"
        '设置body的背景颜色为红色' 注释
        '添加div内容为文字，设置div的背景颜色为紫色|文字大小为30px'
        '添加p段落，设置p标签的边框的颜色+圆角+线条+文字大小等'
    CSS-页内样式内容: "在整个页面中有个style标签"
        '设置body的背景颜色'
        '设置页面中所有div的样式如背景颜色，文字大小等'
        '设置页面中所有段落的样式如文字大小，边框样式等'
    CSS-外部样式内容:
        说明：新建一个HTML文件，新建一个CSS文件夹，新建一个CSS样式文件(index.css)
        '引入外部的css文件' => <link ref="stylesheet" href="css/index.css">


08 CSS的三种常见选择器
   说明：HTML是静态语言是弱类型的语言，是解释运行的而不是编译运行的
   问题：如果既有外部的CSS样式表又有内部的页内样式，以谁为准？先处理最先设置的样式，再处理后面的样式（如果有相同的键则直接覆盖，如果没有相同的键则增加）
   原则：① 就近原则 ② 叠加原则
   重点：
        1-）属性       通过属性的复杂叠加可以做出漂亮的样式
        2-）选择器     通过选择器找到对应的标签来设置样式
   选择器：
        1-）标签选择器 控制当前页面中所有同类型的标签样式
            /*
             div{具体设置}
             body{具体设置}
             */
        2-）类选择器 在标签中添加class="类名"
            /*
             .类名{具体设置}
             */
        3-）id选择器 在标签中添加id="id的名称" 注意：id是唯一的不能相同，否则报错（红色波浪线）
            /*
             #id的名称{具体的设置}
             */
        4-）并列选择器 逻辑或
            /*
             选择器1，选择器2{具体设置}
             #main,.test1{ 统一设置id为main的标签和类名为test1的标签样式 }
             */
        5-）复合选择器 逻辑与（必须两个条件都满足）
            /*
             选择器1选择器2{具体设置}
             div.test1{ 设置div标签中 类名为test1的标签样式}
             */

        6-）后代选择器 包括所有的子孙
            /*
             标签选择器1（空格）标签选择器2（空格）{ 具体的设置 }
             div p { 为div标签中的p标签设置样式 }
             */
        7-）直接后代选择器 只包括子标签
            /*
             div >a { 为div标签的子标签设置样式 }
             */
        8-）相邻兄弟选择器
            /*
             div + p { 具体的样式设置 有上下两个相邻的标签}
             */
        9-）属性选择器
            ① 在标签的内部可以任意的添加属性 如<div name="wendingding">标签的内容</div> div[name] { 设置样式 }
            ② 可以使用多种查找方式 <div name="wen" age="26">标签的内容</div> div[name][age] { 设置样式 }

        伪类：当满足某些条件的时候才会触发
            ：focus 焦点（拥有键盘输入焦点=>input） input：focus{具体的设置}
            ：hover 悬浮
        伪元素：在特殊的场景中使用
            ：first_letter 向文本的第一个字符添加样式
            ：first_Ilne   向文本的首行添加特殊的样式
    选择器的优先级：
        ① 通配符
            符号 *  代表所有的标签
            作用    设置一些全局的属性如字体大小 字体颜色等
            缺陷    1）性能不是很好[递归] 2）优先级别最低 3）不利于SEO优化，所以在开发中几乎不用它


09 标签的类型
    分类：块级标签|行内标签|行内-块级标签
    "块级标签"：
        ① 独占一行
        ② 能够随时设置宽度和高度，ex div|p|h1等
    "行内标签"：
        ① 多个行内标签可以显示在一行
        ② 宽度和高度取决于内容的尺寸，ex span|a|label
    "行内-块级标签"
        ① 多个行内标签可以在同一行显示
        ② 宽度和高度可以随意设置 ex button | input
    + 改变标签的类型 "display属性"
        ① 隐藏标签(鼠标移动上面的时候就隐藏)                 "none
        ② 让标签变成块级标签 行内标签 - >块级标签            "block
        ③ 让标签变成行内标签 块级标签 - >行内标签            "inline
        ④ 让标签变成行内-块级标签                          "inline-block"

/*
    块级标签        不可以多个标签显示一行   +     可以设置宽度和高度
    行内标签        可以多个标签显示一行     +     不可以设置宽度和高度
    行内-块级标签    可以多个标签显示一行     +     可以设置宽度和高度
*/
    "代码演示"：
        说明：新建文件夹（标签的类型）- 创建新的HTML文件（index）
        '创建块级标签 div，设置div的背景颜色样式，演示其独占一行'
        '使用通配符* 设置页面的外间距和内间距'
        '创建行内标签 设置样式和宽度高度[No]'
        '创建行内-块级标签  设置样式和宽高'


10 CSS的属性
    分类：可继承的属性(文字控制)|不可继承的属性(区间控制)
    代码：01 创建新的文件夹(CSS的属性) - 创建新的HTML文件(CSS可继承的属性)
         02 拷贝01HTML文件 - 修改为新的HTML文件(CSS不可继承的属性)
         02 创建新的HTML文件(CSS其他常用的属性)
    内容：
        "可继承属性  "：文字的颜色|文字的大小|文字的字体等等
        "不可继承属性"：背景颜色|区块宽度|区块高度等
    其他属性：
        "visibility":设置元素是否可见(内容隐藏了，但保持占位-display)
        "cursor":规定要显示的光标类型
        "font":设置字体 font家族
        "text-decoration"：为文本设置修饰(下划线|穿透线等)，可应用于为超链接去除下划线


第二天笔记
01 盒子模型
   说明：每个标签都是一个盒子
   内容：
        ① "内容-content"（文字和图片）      宽度和高度
        ② "填充-padding"（内边距）         上-右-下-左
        ③ "边框-border"（盒子本身）         宽度-样式-颜色
        ④ "边界-margin"（外边距）
    标准盒子模型：W3C出品
    IE盒子模型：基于IE浏览器的核心做开发的浏览器
    解决：针对IE体系和非IE体系来做两套适配。
    其它属性：
    设置盒子的内边距
